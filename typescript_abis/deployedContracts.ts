/**
 * This file is autogenerated by Spherre contract deployment script.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    Spherre: {
      address:
        "0x593aee2d31041b9b350c8a0ad07e67232fd235e53a20b6abb1abc2b4e3f4573",
      abi: [
        {
          type: "impl",
          name: "SpherreImpl",
          interface_name: "spherre::interfaces::ispherre::ISpherre",
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::ispherre::ISpherre",
          items: [
            {
              type: "function",
              name: "grant_superadmin_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "grant_staff_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "revoke_superadmin_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "revoke_staff_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "has_staff_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "has_superadmin_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "pause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "unpause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "deploy_account",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "name",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "description",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "members",
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
                {
                  name: "threshold",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "is_deployed_account",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "update_account_class_hash",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_account_class_hash",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::spherre::Spherre::AccountDeployed",
          kind: "struct",
          members: [
            {
              name: "account_address",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "members",
              type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
              kind: "data",
            },
            {
              name: "threshold",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "deployer",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "date_deployed",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::spherre::Spherre::AccountClassHashUpdated",
          kind: "struct",
          members: [
            {
              name: "old_class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
            {
              name: "new_class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
            {
              name: "caller",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Paused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Unpaused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Paused",
              type: "openzeppelin_security::pausable::PausableComponent::Paused",
              kind: "nested",
            },
            {
              name: "Unpaused",
              type: "openzeppelin_security::pausable::PausableComponent::Unpaused",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::reentrancyguard::ReentrancyGuardComponent::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "sender",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "sender",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "previous_admin_role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "new_admin_role",
              type: "core::felt252",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "RoleGranted",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
              kind: "nested",
            },
            {
              name: "RoleRevoked",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
              kind: "nested",
            },
            {
              name: "RoleAdminChanged",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_introspection::src5::SRC5Component::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::spherre::Spherre::Event",
          kind: "enum",
          variants: [
            {
              name: "AccountDeployed",
              type: "spherre::spherre::Spherre::AccountDeployed",
              kind: "nested",
            },
            {
              name: "AccountClassHashUpdated",
              type: "spherre::spherre::Spherre::AccountClassHashUpdated",
              kind: "nested",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "PausableEvent",
              type: "openzeppelin_security::pausable::PausableComponent::Event",
              kind: "flat",
            },
            {
              name: "ReentrancyGuardEvent",
              type: "openzeppelin_security::reentrancyguard::ReentrancyGuardComponent::Event",
              kind: "flat",
            },
            {
              name: "AccessControlEvent",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
              kind: "flat",
            },
            {
              name: "SRC5Event",
              type: "openzeppelin_introspection::src5::SRC5Component::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x7eeb853c8586499d858dabf79241538a0c71b83fa82d2560118db1765cc8be2",
    },
    SpherreAccount: {
      address:
        "0x243c05ce5a6d43ec46d7f1cd5bd94be9e68541312a85cf7fed980d9ec0d8a96",
      abi: [
        {
          type: "impl",
          name: "AccountImpl",
          interface_name: "spherre::interfaces::iaccount::IAccount",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "spherre::types::AccountDetails",
          members: [
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::iaccount::IAccount",
          items: [
            {
              type: "function",
              name: "get_name",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_description",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_account_details",
              inputs: [],
              outputs: [
                {
                  type: "spherre::types::AccountDetails",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_deployer",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "pause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "unpause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "UpgradeableImpl",
          interface_name: "openzeppelin_upgrades::interface::IUpgradeable",
        },
        {
          type: "interface",
          name: "openzeppelin_upgrades::interface::IUpgradeable",
          items: [
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "AccountDataImpl",
          interface_name: "spherre::interfaces::iaccount_data::IAccountData",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "spherre::types::TransactionType",
          variants: [
            {
              name: "VOID",
              type: "()",
            },
            {
              name: "MEMBER_ADD",
              type: "()",
            },
            {
              name: "MEMBER_REMOVE",
              type: "()",
            },
            {
              name: "MEMBER_PERMISSION_EDIT",
              type: "()",
            },
            {
              name: "THRESHOLD_CHANGE",
              type: "()",
            },
            {
              name: "TOKEN_SEND",
              type: "()",
            },
            {
              name: "NFT_SEND",
              type: "()",
            },
          ],
        },
        {
          type: "enum",
          name: "spherre::types::TransactionStatus",
          variants: [
            {
              name: "VOID",
              type: "()",
            },
            {
              name: "INITIATED",
              type: "()",
            },
            {
              name: "REJECTED",
              type: "()",
            },
            {
              name: "APPROVED",
              type: "()",
            },
            {
              name: "EXECUTED",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::starknet::contract_address::ContractAddress>",
            },
          ],
        },
        {
          type: "struct",
          name: "spherre::types::Transaction",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
            },
            {
              name: "tx_type",
              type: "spherre::types::TransactionType",
            },
            {
              name: "tx_status",
              type: "spherre::types::TransactionStatus",
            },
            {
              name: "proposer",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "executor",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "approved",
              type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
            },
            {
              name: "rejected",
              type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
            },
            {
              name: "date_created",
              type: "core::integer::u64",
            },
            {
              name: "date_executed",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::iaccount_data::IAccountData",
          items: [
            {
              type: "function",
              name: "get_account_members",
              inputs: [],
              outputs: [
                {
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_members_count",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_threshold",
              inputs: [],
              outputs: [
                {
                  type: "(core::integer::u64, core::integer::u64)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_transaction",
              inputs: [
                {
                  name: "transaction_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "spherre::types::Transaction",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_member",
              inputs: [
                {
                  name: "address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_number_of_voters",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_number_of_proposers",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_number_of_executors",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "approve_transaction",
              inputs: [
                {
                  name: "tx_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "reject_transaction",
              inputs: [
                {
                  name: "tx_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "PermissionControlImpl",
          interface_name:
            "spherre::interfaces::ipermission_control::IPermissionControl",
        },
        {
          type: "enum",
          name: "spherre::types::PermissionEnum",
          variants: [
            {
              name: "PROPOSER",
              type: "()",
            },
            {
              name: "VOTER",
              type: "()",
            },
            {
              name: "EXECUTOR",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::ipermission_control::IPermissionControl",
          items: [
            {
              type: "function",
              name: "has_permission",
              inputs: [
                {
                  name: "member",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "permission",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_member_permissions",
              inputs: [
                {
                  name: "member",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<spherre::types::PermissionEnum>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "permissions_to_mask",
              inputs: [
                {
                  name: "permissions",
                  type: "core::array::Array::<spherre::types::PermissionEnum>",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u8",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "permissions_from_mask",
              inputs: [
                {
                  name: "mask",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<spherre::types::PermissionEnum>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_valid_mask",
              inputs: [
                {
                  name: "mask",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "PausableImpl",
          interface_name: "openzeppelin_security::interface::IPausable",
        },
        {
          type: "interface",
          name: "openzeppelin_security::interface::IPausable",
          items: [
            {
              type: "function",
              name: "is_paused",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableMixinImpl",
          interface_name: "openzeppelin_access::ownable::interface::OwnableABI",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::OwnableABI",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "transferOwnership",
              inputs: [
                {
                  name: "newOwner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounceOwnership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "deployer",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "members",
              type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
            },
            {
              name: "threshold",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::AddedMember",
          kind: "struct",
          members: [
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::ThresholdUpdated",
          kind: "struct",
          members: [
            {
              name: "threshold",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "date_updated",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionApproved",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "date_approved",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionRejected",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "date_approved",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionVoted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "voter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "date_voted",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "executor",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "date_executed",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::Event",
          kind: "enum",
          variants: [
            {
              name: "AddedMember",
              type: "spherre::account_data::AccountData::AddedMember",
              kind: "nested",
            },
            {
              name: "ThresholdUpdated",
              type: "spherre::account_data::AccountData::ThresholdUpdated",
              kind: "nested",
            },
            {
              name: "TransactionApproved",
              type: "spherre::account_data::AccountData::TransactionApproved",
              kind: "nested",
            },
            {
              name: "TransactionRejected",
              type: "spherre::account_data::AccountData::TransactionRejected",
              kind: "nested",
            },
            {
              name: "TransactionVoted",
              type: "spherre::account_data::AccountData::TransactionVoted",
              kind: "nested",
            },
            {
              name: "TransactionExecuted",
              type: "spherre::account_data::AccountData::TransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::components::permission_control::PermissionControl::PermissionGranted",
          kind: "struct",
          members: [
            {
              name: "permission",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::components::permission_control::PermissionControl::PermissionRevoked",
          kind: "struct",
          members: [
            {
              name: "permission",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::components::permission_control::PermissionControl::Event",
          kind: "enum",
          variants: [
            {
              name: "PermissionGranted",
              type: "spherre::components::permission_control::PermissionControl::PermissionGranted",
              kind: "nested",
            },
            {
              name: "PermissionRevoked",
              type: "spherre::components::permission_control::PermissionControl::PermissionRevoked",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeProposed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "new_threshold",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeExecuted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "new_threshold",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "ThresholdChangeProposed",
              type: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeProposed",
              kind: "nested",
            },
            {
              name: "ThresholdChangeExecuted",
              type: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionProposed",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "permissions",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "permissions",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_add_transaction::MemberAddTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "MemberAddTransactionProposed",
              type: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionProposed",
              kind: "nested",
            },
            {
              name: "MemberAddTransactionExecuted",
              type: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalProposed",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalExecuted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "MemberRemovalProposed",
              type: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalProposed",
              kind: "nested",
            },
            {
              name: "MemberRemovalExecuted",
              type: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_permission_tx::MemberPermissionTransaction::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionProposed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "nft_contract",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "nft_contract",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::nft_transaction::NFTTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "NFTTransactionProposed",
              type: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionProposed",
              kind: "nested",
            },
            {
              name: "NFTTransactionExecuted",
              type: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionProposed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::token_transaction::TokenTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "TokenTransactionProposed",
              type: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionProposed",
              kind: "nested",
            },
            {
              name: "TokenTransactionExecuted",
              type: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Paused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Unpaused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Paused",
              type: "openzeppelin_security::pausable::PausableComponent::Paused",
              kind: "nested",
            },
            {
              name: "Unpaused",
              type: "openzeppelin_security::pausable::PausableComponent::Unpaused",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account::SpherreAccount::Event",
          kind: "enum",
          variants: [
            {
              name: "AccountDataEvent",
              type: "spherre::account_data::AccountData::Event",
              kind: "flat",
            },
            {
              name: "PermissionControlEvent",
              type: "spherre::components::permission_control::PermissionControl::Event",
              kind: "flat",
            },
            {
              name: "ChangeThresholdEvent",
              type: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::Event",
              kind: "flat",
            },
            {
              name: "MemberAddTransactionEvent",
              type: "spherre::actions::member_add_transaction::MemberAddTransaction::Event",
              kind: "flat",
            },
            {
              name: "MemberRemoveTransactionEvent",
              type: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::Event",
              kind: "flat",
            },
            {
              name: "MemberPermissionTransactionEvent",
              type: "spherre::actions::member_permission_tx::MemberPermissionTransaction::Event",
              kind: "flat",
            },
            {
              name: "NFTTransactionEvent",
              type: "spherre::actions::nft_transaction::NFTTransaction::Event",
              kind: "flat",
            },
            {
              name: "TokenTransactionEvent",
              type: "spherre::actions::token_transaction::TokenTransaction::Event",
              kind: "flat",
            },
            {
              name: "PausableEvent",
              type: "openzeppelin_security::pausable::PausableComponent::Event",
              kind: "flat",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x5bf6deaa47784584fc815f8885fcacca41f93765a45d618e884ab7ae020c34d",
    },
  },
  sepolia: {
    Spherre: {
      address:
        "0x3bfb33ad8b7ba73a0ad00ef4291eb48962ccc8de62ea18c94792b25c529c1f4",
      abi: [
        {
          type: "impl",
          name: "SpherreImpl",
          interface_name: "spherre::interfaces::ispherre::ISpherre",
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::ispherre::ISpherre",
          items: [
            {
              type: "function",
              name: "grant_superadmin_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "grant_staff_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "revoke_superadmin_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "revoke_staff_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "has_staff_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "has_superadmin_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "pause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "unpause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "deploy_account",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "name",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "description",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "members",
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
                {
                  name: "threshold",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "is_deployed_account",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "update_account_class_hash",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_account_class_hash",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::spherre::Spherre::AccountDeployed",
          kind: "struct",
          members: [
            {
              name: "account_address",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "members",
              type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
              kind: "data",
            },
            {
              name: "threshold",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "deployer",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "date_deployed",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::spherre::Spherre::AccountClassHashUpdated",
          kind: "struct",
          members: [
            {
              name: "old_class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
            {
              name: "new_class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
            {
              name: "caller",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Paused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Unpaused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Paused",
              type: "openzeppelin_security::pausable::PausableComponent::Paused",
              kind: "nested",
            },
            {
              name: "Unpaused",
              type: "openzeppelin_security::pausable::PausableComponent::Unpaused",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::reentrancyguard::ReentrancyGuardComponent::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "sender",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "sender",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "previous_admin_role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "new_admin_role",
              type: "core::felt252",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "RoleGranted",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
              kind: "nested",
            },
            {
              name: "RoleRevoked",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
              kind: "nested",
            },
            {
              name: "RoleAdminChanged",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_introspection::src5::SRC5Component::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::spherre::Spherre::Event",
          kind: "enum",
          variants: [
            {
              name: "AccountDeployed",
              type: "spherre::spherre::Spherre::AccountDeployed",
              kind: "nested",
            },
            {
              name: "AccountClassHashUpdated",
              type: "spherre::spherre::Spherre::AccountClassHashUpdated",
              kind: "nested",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "PausableEvent",
              type: "openzeppelin_security::pausable::PausableComponent::Event",
              kind: "flat",
            },
            {
              name: "ReentrancyGuardEvent",
              type: "openzeppelin_security::reentrancyguard::ReentrancyGuardComponent::Event",
              kind: "flat",
            },
            {
              name: "AccessControlEvent",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
              kind: "flat",
            },
            {
              name: "SRC5Event",
              type: "openzeppelin_introspection::src5::SRC5Component::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x7eeb853c8586499d858dabf79241538a0c71b83fa82d2560118db1765cc8be2",
    },
    SpherreAccount: {
      address:
        "0x43790311464bff25fb852e4e82435bb56e5ae9e09b629e696d90054bb5caf10",
      abi: [
        {
          type: "impl",
          name: "AccountImpl",
          interface_name: "spherre::interfaces::iaccount::IAccount",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "spherre::types::AccountDetails",
          members: [
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::iaccount::IAccount",
          items: [
            {
              type: "function",
              name: "get_name",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_description",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_account_details",
              inputs: [],
              outputs: [
                {
                  type: "spherre::types::AccountDetails",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_deployer",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "pause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "unpause",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "UpgradeableImpl",
          interface_name: "openzeppelin_upgrades::interface::IUpgradeable",
        },
        {
          type: "interface",
          name: "openzeppelin_upgrades::interface::IUpgradeable",
          items: [
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "AccountDataImpl",
          interface_name: "spherre::interfaces::iaccount_data::IAccountData",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "spherre::types::TransactionType",
          variants: [
            {
              name: "VOID",
              type: "()",
            },
            {
              name: "MEMBER_ADD",
              type: "()",
            },
            {
              name: "MEMBER_REMOVE",
              type: "()",
            },
            {
              name: "MEMBER_PERMISSION_EDIT",
              type: "()",
            },
            {
              name: "THRESHOLD_CHANGE",
              type: "()",
            },
            {
              name: "TOKEN_SEND",
              type: "()",
            },
            {
              name: "NFT_SEND",
              type: "()",
            },
          ],
        },
        {
          type: "enum",
          name: "spherre::types::TransactionStatus",
          variants: [
            {
              name: "VOID",
              type: "()",
            },
            {
              name: "INITIATED",
              type: "()",
            },
            {
              name: "REJECTED",
              type: "()",
            },
            {
              name: "APPROVED",
              type: "()",
            },
            {
              name: "EXECUTED",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::starknet::contract_address::ContractAddress>",
            },
          ],
        },
        {
          type: "struct",
          name: "spherre::types::Transaction",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
            },
            {
              name: "tx_type",
              type: "spherre::types::TransactionType",
            },
            {
              name: "tx_status",
              type: "spherre::types::TransactionStatus",
            },
            {
              name: "proposer",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "executor",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "approved",
              type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
            },
            {
              name: "rejected",
              type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
            },
            {
              name: "date_created",
              type: "core::integer::u64",
            },
            {
              name: "date_executed",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::iaccount_data::IAccountData",
          items: [
            {
              type: "function",
              name: "get_account_members",
              inputs: [],
              outputs: [
                {
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_members_count",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_threshold",
              inputs: [],
              outputs: [
                {
                  type: "(core::integer::u64, core::integer::u64)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_transaction",
              inputs: [
                {
                  name: "transaction_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "spherre::types::Transaction",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_member",
              inputs: [
                {
                  name: "address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_number_of_voters",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_number_of_proposers",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_number_of_executors",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "approve_transaction",
              inputs: [
                {
                  name: "tx_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "reject_transaction",
              inputs: [
                {
                  name: "tx_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "PermissionControlImpl",
          interface_name:
            "spherre::interfaces::ipermission_control::IPermissionControl",
        },
        {
          type: "enum",
          name: "spherre::types::PermissionEnum",
          variants: [
            {
              name: "PROPOSER",
              type: "()",
            },
            {
              name: "VOTER",
              type: "()",
            },
            {
              name: "EXECUTOR",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "spherre::interfaces::ipermission_control::IPermissionControl",
          items: [
            {
              type: "function",
              name: "has_permission",
              inputs: [
                {
                  name: "member",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "permission",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_member_permissions",
              inputs: [
                {
                  name: "member",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<spherre::types::PermissionEnum>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "permissions_to_mask",
              inputs: [
                {
                  name: "permissions",
                  type: "core::array::Array::<spherre::types::PermissionEnum>",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u8",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "permissions_from_mask",
              inputs: [
                {
                  name: "mask",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<spherre::types::PermissionEnum>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_valid_mask",
              inputs: [
                {
                  name: "mask",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "PausableImpl",
          interface_name: "openzeppelin_security::interface::IPausable",
        },
        {
          type: "interface",
          name: "openzeppelin_security::interface::IPausable",
          items: [
            {
              type: "function",
              name: "is_paused",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableMixinImpl",
          interface_name: "openzeppelin_access::ownable::interface::OwnableABI",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::OwnableABI",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "transferOwnership",
              inputs: [
                {
                  name: "newOwner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounceOwnership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "deployer",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "members",
              type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
            },
            {
              name: "threshold",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::AddedMember",
          kind: "struct",
          members: [
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::ThresholdUpdated",
          kind: "struct",
          members: [
            {
              name: "threshold",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "date_updated",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionApproved",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "date_approved",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionRejected",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "date_approved",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionVoted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "voter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "date_voted",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::TransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "executor",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "date_executed",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account_data::AccountData::Event",
          kind: "enum",
          variants: [
            {
              name: "AddedMember",
              type: "spherre::account_data::AccountData::AddedMember",
              kind: "nested",
            },
            {
              name: "ThresholdUpdated",
              type: "spherre::account_data::AccountData::ThresholdUpdated",
              kind: "nested",
            },
            {
              name: "TransactionApproved",
              type: "spherre::account_data::AccountData::TransactionApproved",
              kind: "nested",
            },
            {
              name: "TransactionRejected",
              type: "spherre::account_data::AccountData::TransactionRejected",
              kind: "nested",
            },
            {
              name: "TransactionVoted",
              type: "spherre::account_data::AccountData::TransactionVoted",
              kind: "nested",
            },
            {
              name: "TransactionExecuted",
              type: "spherre::account_data::AccountData::TransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::components::permission_control::PermissionControl::PermissionGranted",
          kind: "struct",
          members: [
            {
              name: "permission",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::components::permission_control::PermissionControl::PermissionRevoked",
          kind: "struct",
          members: [
            {
              name: "permission",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::components::permission_control::PermissionControl::Event",
          kind: "enum",
          variants: [
            {
              name: "PermissionGranted",
              type: "spherre::components::permission_control::PermissionControl::PermissionGranted",
              kind: "nested",
            },
            {
              name: "PermissionRevoked",
              type: "spherre::components::permission_control::PermissionControl::PermissionRevoked",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeProposed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "new_threshold",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeExecuted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "new_threshold",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "ThresholdChangeProposed",
              type: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeProposed",
              kind: "nested",
            },
            {
              name: "ThresholdChangeExecuted",
              type: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::ThresholdChangeExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionProposed",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "permissions",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "permissions",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_add_transaction::MemberAddTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "MemberAddTransactionProposed",
              type: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionProposed",
              kind: "nested",
            },
            {
              name: "MemberAddTransactionExecuted",
              type: "spherre::actions::member_add_transaction::MemberAddTransaction::MemberAddTransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalProposed",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalExecuted",
          kind: "struct",
          members: [
            {
              name: "transaction_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "member",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "MemberRemovalProposed",
              type: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalProposed",
              kind: "nested",
            },
            {
              name: "MemberRemovalExecuted",
              type: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::MemberRemovalExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::member_permission_tx::MemberPermissionTransaction::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionProposed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "nft_contract",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "nft_contract",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::nft_transaction::NFTTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "NFTTransactionProposed",
              type: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionProposed",
              kind: "nested",
            },
            {
              name: "NFTTransactionExecuted",
              type: "spherre::actions::nft_transaction::NFTTransaction::NFTTransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionProposed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionExecuted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::actions::token_transaction::TokenTransaction::Event",
          kind: "enum",
          variants: [
            {
              name: "TokenTransactionProposed",
              type: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionProposed",
              kind: "nested",
            },
            {
              name: "TokenTransactionExecuted",
              type: "spherre::actions::token_transaction::TokenTransaction::TokenTransactionExecuted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Paused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Unpaused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Paused",
              type: "openzeppelin_security::pausable::PausableComponent::Paused",
              kind: "nested",
            },
            {
              name: "Unpaused",
              type: "openzeppelin_security::pausable::PausableComponent::Unpaused",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "spherre::account::SpherreAccount::Event",
          kind: "enum",
          variants: [
            {
              name: "AccountDataEvent",
              type: "spherre::account_data::AccountData::Event",
              kind: "flat",
            },
            {
              name: "PermissionControlEvent",
              type: "spherre::components::permission_control::PermissionControl::Event",
              kind: "flat",
            },
            {
              name: "ChangeThresholdEvent",
              type: "spherre::actions::change_threshold_transaction::ChangeThresholdTransaction::Event",
              kind: "flat",
            },
            {
              name: "MemberAddTransactionEvent",
              type: "spherre::actions::member_add_transaction::MemberAddTransaction::Event",
              kind: "flat",
            },
            {
              name: "MemberRemoveTransactionEvent",
              type: "spherre::actions::member_remove_transaction::MemberRemoveTransaction::Event",
              kind: "flat",
            },
            {
              name: "MemberPermissionTransactionEvent",
              type: "spherre::actions::member_permission_tx::MemberPermissionTransaction::Event",
              kind: "flat",
            },
            {
              name: "NFTTransactionEvent",
              type: "spherre::actions::nft_transaction::NFTTransaction::Event",
              kind: "flat",
            },
            {
              name: "TokenTransactionEvent",
              type: "spherre::actions::token_transaction::TokenTransaction::Event",
              kind: "flat",
            },
            {
              name: "PausableEvent",
              type: "openzeppelin_security::pausable::PausableComponent::Event",
              kind: "flat",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x5bf6deaa47784584fc815f8885fcacca41f93765a45d618e884ab7ae020c34d",
    },
  },
} as const;

export default deployedContracts;
